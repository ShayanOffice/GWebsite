import Head from 'next/head';
import Image from 'next/image';
import { useRef, useState, useEffect } from 'react';

import styled from 'styled-components';

// const pagesCount = 3;
let scrollbarWidth =
  typeof window !== 'undefined' &&
  window.innerWidth - document.body.clientWidth;
export function useHorizontalScroll() {
  const elRef = useRef();
  useEffect(() => {
    const el = elRef.current;
    if (el) {
      const onWheel = (e) => {
        if (e.deltaY == 0) return;
        e.preventDefault();
        el.scrollTo({
          left: el.scrollLeft + (e.deltaY * window.innerWidth) / (90),
          behavior: 'smooth',
        });
      };
      el.addEventListener('wheel', onWheel);
      return () => el.removeEventListener('wheel', onWheel);
    }
  }, []);
  return elRef;
}

const Container = styled.div`
  width: 100vw;
  height: 100vh;
  scrollbar-width: none;
  -ms-overflow-style: none;

  .main {
    scroll-snap-type: x mandatory;
    /* scro */
    overflow-x: visible;
    overflow-y: hidden;
    width: 100%;
    height: 100%;
    background-color: green;
    display: flex;
    section {
      flex: none;
      scroll-snap-align: start;
      display: flex;
      justify-content: center;
      align-items: center;
      width: 100vw;
      height: 100vh;
      font-weight: bold;
      font-size: xxx-large;
      color: #323;
      &:nth-of-type(1) {
        background-color: grey;
      }
      &:nth-of-type(2) {
        background-color: bisque;
      }
      &:nth-of-type(3) {
        background-color: blueviolet;
      }
      h1 {
      }
    }
  }
`;

export default function Home() {
  const scrollRef = useHorizontalScroll();
  // console.log(scrollbarWidth);
  // useEffect(() => {
  //   const handleScroll = (e) => {
  //     e.preventDefault();
  //     window.scrollBy(e.deltaY, 0);
  //   };
  //   window.addEventListener('scroll', handleScroll);
  //   return window.removeEventListener('scroll', handleScroll);
  // }, []);
  // function horizontalScroll(event) {
  //   console.log('scrolling');
  //   const delta = Math.max(
  //     -1,
  //     Math.min(1, event.nativeEvent.wheelDelta || -event.nativeEvent.detail)
  //   );
  //   event.currentTarget.scrollLeft -= delta * 100;
  //   event.preventDefault();
  // }
  return (
    <Container
      scrollbarWidth={scrollbarWidth}
      // onWheel={horizontalScroll}
    >
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <div className='main' ref={scrollRef}>
        <section>
          <h1>Page One</h1>
        </section>
        <section>
          <h1>Page Two</h1>
        </section>
        <section>
          <h1>Page Three</h1>
        </section>
        <section>
          <h1>Page Three</h1>
        </section>
        <section>
          <h1>Page Three</h1>
        </section>
        <section>
          <h1>Page Three</h1>
        </section>
        <section>
          <h1>Page Three</h1>
        </section>
        <section>
          <h1>Page Three</h1>
        </section>
        <section>
          <h1>Page Three</h1>
        </section>
        <section>
          <h1>Page Three</h1>
        </section>
      </div>
    </Container>
  );
}
